{
  "hash": "8376d6af4ff7238b6573dc9abfa8c5c6",
  "result": {
    "markdown": "---\ntitle: \"Web-Scraping - Raspando dados sobre população no ES\"\nauthor: \"Elias Ribeiro - Atividade Ciência de Dados\"\ndate: \"2022-07-18\"\ncategories: [code, phyton, analysis]\nimage: \"image.png\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reticulate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'reticulate' was built under R version 4.2.1\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nimport numpy as np\nfrom bs4 import BeautifulSoup\nimport pandas as pd\nimport requests\n```\n:::\n\n\nNeste Post, queremos fazer raspagem dos dados na tabela \"Lista de municípios do Espírito Santo por população\" no site abaixo.\n\n![](images/paste-9EC51473.png)\n\n\n::: {.cell}\n\n```{.python .cell-code}\nurl = requests.get('https://pt.wikipedia.org/wiki/Lista_de_munic%C3%ADpios_do_Esp%C3%ADrito_Santo_por_popula%C3%A7%C3%A3o')\nprint(url.status_code)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n200\n```\n:::\n:::\n\n\nPrimeiro inspecionamos a tabela no site e procuramos o código fonte para podermos aplicar no código\n\n![](images/paste-5957E6C7.png)\n\nEncontrada a tabela no código fonte, podemos utilizar a função *find* para encontrar nossa tabela da seguinte forma :\n\n\n::: {.cell}\n\n```{.python .cell-code}\nhtml = BeautifulSoup(url.content, 'html.parser')\ntabela = html.find('table')\ntitulos = [i.text for i in tabela.find_all('th')]\nprint(titulos)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n['Posição', 'Município', 'População\\n']\n```\n:::\n\n```{.python .cell-code}\ntitulos[2] = 'Populacao'#tirando o \"\\n\"\nprint(titulos)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n['Posição', 'Município', 'Populacao']\n```\n:::\n:::\n\n\nAgora vamos raspar os dados e organizar em um Data Frame\n\n\n::: {.cell}\n\n```{.python .cell-code}\ndf = pd.DataFrame(columns = titulos)\nfor j in tabela.find_all('tr')[1:]:\n    row_data = j.find_all('td')\n    row = [i.text for i in row_data]\n    length = len(df)\n    df.loc[length] = row\ndf.head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Posição                 Município  Populacao\n0       1                     Serra  527.240\\n\n1       2                Vila Velha  501.325\\n\n2       3                 Cariacica  383.917\\n\n3       4                   Vitória  365.855\\n\n4       5   Cachoeiro de Itapemirim  210.589\\n\n```\n:::\n:::\n\n\nComo podemos observar, os valores das populações tem um \"\\\\n\" e a população de *Castelo* tem um \"\\[2\\]\" junto com o valor da população, vamos tirá-lo da seguinte forma:\n\n\n::: {.cell}\n\n```{.python .cell-code}\npopulacao = df['Populacao']\nprint(populacao[16])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n38.070 [2]\n```\n:::\n\n```{.python .cell-code}\npopulacao[16]='38.070\\n'\nlen(populacao)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n78\n```\n:::\n\n```{.python .cell-code}\npopulacao = [i.split('\\n')[0].replace(' ', '.').replace('\\xa0', '.') for i in populacao]\npopulacao = [float(i) for i in populacao]\n# populacao\ndf['População'] = populacao\nprint(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Posição                 Município  Populacao  População\n0        1                     Serra  527.240\\n    527.240\n1        2                Vila Velha  501.325\\n    501.325\n2        3                 Cariacica  383.917\\n    383.917\n3        4                   Vitória  365.855\\n    365.855\n4        5   Cachoeiro de Itapemirim  210.589\\n    210.589\n..     ...                       ...        ...        ...\n73      74             Alto Rio Novo    7 836\\n      7.836\n74      75                    Apiacá    7 567\\n      7.567\n75      76        Dores do Rio Preto    6 749\\n      6.749\n76      77                  Mucurici    5 524\\n      5.524\n77      78    Divino de São Lourenço    4 304\\n      4.304\n\n[78 rows x 4 columns]\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}